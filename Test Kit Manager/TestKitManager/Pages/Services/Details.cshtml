@page
@model TestKitManager.Pages.Services.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Service</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Service.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Service.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Service.Version)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Service.Version)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Service.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Service.Location.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Service.ConfigFileName)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Service.HasConfig)
            {
                <div class="input-group w-25">
                    <input type="text" class="form-control" placeholder="@Model.Service.ConfigFileName" aria-label="Existing Config File: @Model.Service.ConfigFileName" data-toggle="tooltip" title="@Model.Service.ConfigFileName" readonly>
                    <button type="submit" asp-page-handler="DownloadFile" asp-route-id="@Model.Service.Id" class="btn btn-primary">Download</button>   
                </div>
            }
        </dd>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Service.Id">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        });
    </script>
}